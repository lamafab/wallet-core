syntax = "proto3";

package TW.Lightning.Proto;
option java_package = "wallet.core.jni.proto";

message SendPaymentRequest {
    // The bolt11 invoice
    string bolt11 = 1;
    // The optional amount to pay in millisatoshis (1 sat = 1_000 msat). This
    // should only be set when `bolt11` is a zero-amount invoice.
    optional uint64 amount_msat = 2;
}

message LnInvoice {
    message RouteHint {
        message RouteHintHop {
            /// The node_id of the non-target end of the route
            string src_node_id = 1;
            /// The short_channel_id of this channel
            uint64 short_channel_id = 2;
            /// The fees which must be paid to use this channel
            uint32 fees_base_msat = 3;
            uint32 fees_proportional_millionths = 4;
            /// The difference in CLTV values between this node and the next node.
            uint64 cltv_expiry_delta = 5;
            /// The minimum value, in msat, which must be relayed to the next hop.
            optional uint64 htlc_minimum_msat = 6;
            /// The maximum value in msat available for routing with a single HTLC.
            optional uint64 htlc_maximum_msat = 7;
        }

        repeated RouteHintHop hops = 1;
    }

    string bolt11 = 1;
    string payee_pubkey = 2;
    string payment_hash = 3;
    optional string description = 4;
    optional string description_hash = 5;
    optional uint64 amount_msat = 6;
    uint64 timestamp = 7;
    uint64 expirty = 8;
    repeated RouteHint route_hints = 9;
    bytes payment_secret = 10;
    uint64 min_final_cltv_expirty_delta = 11;
}

// The parameters required for the `/cln.Node/Invoice` endpoint.
message InvoiceParams {
    uint64 destination_invoice_amount_msat = 1;
    string description = 2;
    optional bytes preimage = 3;
    optional bool use_description_hash = 4;
    optional uint32 expiry = 5;
    optional int32 cltv  = 6;
}

message LspPaymentRegistrationParams {
    message OpeningFeeParams {
        uint64 min_msat = 1;
        uint32 proportional = 2;
        string valid_until = 3;
        uint32 max_idle_time = 4;
        uint32 max_client_to_self_delay = 5;
        string promise = 6;
    }

    string lsp_id = 1;
    string lsp_pubkey = 2;
    bytes payment_hash = 3;
    bytes payment_secret = 4;
    bytes destination = 5;
    int64 incoming_amount_msat = 6;
    int64 outgoing_amount_msat = 7;
    optional OpeningFeeParams opening_fee_params = 8;
}
